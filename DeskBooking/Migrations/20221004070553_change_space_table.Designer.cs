// <auto-generated />
using System;
using DeskBooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeskBooking.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221004070553_change_space_table")]
    partial class change_space_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DeskBooking.Models.AdminUser", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Email");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("DeskBooking.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<int>("DeskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRepeating")
                        .HasColumnType("bit");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("UserId");

                    b.HasIndex("SpaceId", "DeskId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("DeskBooking.Models.DeletedBooking", b =>
                {
                    b.Property<int>("DBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DBookingId"), 1L, 1);

                    b.Property<int>("DDeskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DEndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DIsRepeating")
                        .HasColumnType("bit");

                    b.Property<int>("DSpaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DUserId")
                        .HasColumnType("int");

                    b.HasKey("DBookingId");

                    b.ToTable("DeletedBookings");
                });

            modelBuilder.Entity("DeskBooking.Models.Desk", b =>
                {
                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<int>("DeskId")
                        .HasColumnType("int");

                    b.Property<float>("Xcoordinate")
                        .HasColumnType("real");

                    b.Property<float>("Ycoordinate")
                        .HasColumnType("real");

                    b.HasKey("SpaceId", "DeskId");

                    b.ToTable("Desks");
                });

            modelBuilder.Entity("DeskBooking.Models.Space", b =>
                {
                    b.Property<int>("SpaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpaceId"), 1L, 1);

                    b.Property<bool>("DefaultImage")
                        .HasColumnType("bit");

                    b.Property<byte[]>("FloorImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("InitialDeskNo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SpaceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("DeskBooking.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DeskBooking.Models.Booking", b =>
                {
                    b.HasOne("DeskBooking.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeskBooking.Models.Desk", "Desk")
                        .WithMany()
                        .HasForeignKey("SpaceId", "DeskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desk");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
